type Query {
  # - USER QUERIES #
  allUsers: [User]
  getUserByUsername(username: String!): User

  # - BOOK QUERIES #
  allBooks: [Book]
  getBookByIsbn(isbn13: String!): Book
}

type Mutation {
  # - DATABASE MUTATIONS #
  seedBooks: String
  clearBooks: String

  # - BOOK MUTATIONS #
  addBook(isbn13: String!, title: String!, author: String!, rating: Float!): Book
  updateBook(isbn13: String!, title: String, author: String, rating: Float): Book
  deleteBook(isbn13: String!): Boolean

  # - USER MUTATIONS #
  registerUser(username: String!, password: String!): UserResponse
  loginUser(username: String!, password: String!): UserResponse
  addOrUpdateFavoriteBook(username: String!, isbn13: String!): User
  removeFavoriteBook(username: String!): User
}

type Book {
  isbn13: String
  title: String
  author: String
  rating: Float
}

type UserResponse {
  success: Boolean
  message: String
  token: String
}

type User {
  id: ID!
  username: String!
  favoriteBook: Book
}
